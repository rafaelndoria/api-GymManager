// <auto-generated />
using System;
using GymManager.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GymManager.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GymManager.Core.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PlanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Cpf")
                        .IsUnique();

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("PlanId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("GymManager.Core.Entities.Entry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeIn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeOn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Entries");
                });

            modelBuilder.Entity("GymManager.Core.Entities.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DatePayment")
                        .HasColumnType("datetime2");

                    b.Property<int>("TypePaymentId")
                        .HasColumnType("int");

                    b.Property<double>("Value")
                        .HasPrecision(12, 2)
                        .HasColumnType("float(12)");

                    b.HasKey("Id");

                    b.HasIndex("TypePaymentId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("GymManager.Core.Entities.Plan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int>("EntriesPerDay")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PlanTypeId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasPrecision(12, 2)
                        .HasColumnType("float(12)");

                    b.HasKey("Id");

                    b.HasIndex("PlanTypeId");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("GymManager.Core.Entities.PlanTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EndTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlanId")
                        .HasColumnType("int");

                    b.Property<string>("StartTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WeekId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlanId");

                    b.HasIndex("WeekId");

                    b.ToTable("PlanTime");
                });

            modelBuilder.Entity("GymManager.Core.Entities.PlanType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PeriodInMonths")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PlanType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Monthly",
                            PeriodInMonths = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Bimonthly",
                            PeriodInMonths = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Semiannual",
                            PeriodInMonths = 6
                        },
                        new
                        {
                            Id = 4,
                            Name = "Yearly",
                            PeriodInMonths = 12
                        });
                });

            modelBuilder.Entity("GymManager.Core.Entities.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AccessPermittedUntil")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateSubscription")
                        .HasColumnType("datetime2");

                    b.Property<int>("PlanId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("PlanId");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("GymManager.Core.Entities.TypePayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Payment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "CreditCard"
                        },
                        new
                        {
                            Id = 2,
                            Name = "DebitCard"
                        },
                        new
                        {
                            Id = 3,
                            Name = "PIX"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Money"
                        });
                });

            modelBuilder.Entity("GymManager.Core.Entities.Week", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Weeks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Sunday"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Monday"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Tuesday"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Wednesday"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Thusday"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Friday"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Saturday"
                        });
                });

            modelBuilder.Entity("GymManager.Core.Entities.Customer", b =>
                {
                    b.HasOne("GymManager.Core.Entities.Plan", "Plan")
                        .WithMany("Customers")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("GymManager.Core.Entities.Entry", b =>
                {
                    b.HasOne("GymManager.Core.Entities.Customer", "Customer")
                        .WithMany("Entries")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("GymManager.Core.Entities.Payment", b =>
                {
                    b.HasOne("GymManager.Core.Entities.TypePayment", "TypePayment")
                        .WithMany("Payments")
                        .HasForeignKey("TypePaymentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TypePayment");
                });

            modelBuilder.Entity("GymManager.Core.Entities.Plan", b =>
                {
                    b.HasOne("GymManager.Core.Entities.PlanType", "PlanType")
                        .WithMany("Plans")
                        .HasForeignKey("PlanTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PlanType");
                });

            modelBuilder.Entity("GymManager.Core.Entities.PlanTime", b =>
                {
                    b.HasOne("GymManager.Core.Entities.Plan", "Plan")
                        .WithMany("PlanTimes")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GymManager.Core.Entities.Week", "Week")
                        .WithMany("PlanTimes")
                        .HasForeignKey("WeekId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Plan");

                    b.Navigation("Week");
                });

            modelBuilder.Entity("GymManager.Core.Entities.Subscription", b =>
                {
                    b.HasOne("GymManager.Core.Entities.Customer", "Customer")
                        .WithMany("Subscriptions")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GymManager.Core.Entities.Plan", "Plan")
                        .WithMany("Subscriptions")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("GymManager.Core.Entities.Customer", b =>
                {
                    b.Navigation("Entries");

                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("GymManager.Core.Entities.Plan", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("PlanTimes");

                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("GymManager.Core.Entities.PlanType", b =>
                {
                    b.Navigation("Plans");
                });

            modelBuilder.Entity("GymManager.Core.Entities.TypePayment", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("GymManager.Core.Entities.Week", b =>
                {
                    b.Navigation("PlanTimes");
                });
#pragma warning restore 612, 618
        }
    }
}
